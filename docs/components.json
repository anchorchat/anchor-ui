{
  "components/admin-badge/component.jsx": {
    "description": "Used for displaying a user's Admin role",
    "displayName": "AdminBadge",
    "methods": [],
    "props": {
      "text": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The badge's text",
        "defaultValue": {
          "value": "'Admin'",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inverted": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Inverts color",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/alert/component.jsx": {
    "description": "Four types of (system) messages for alerting your user",
    "displayName": "Alert",
    "methods": [],
    "props": {
      "text": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Text to display"
      },
      "type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'success'",
              "computed": false
            },
            {
              "value": "'error'",
              "computed": false
            },
            {
              "value": "'warning'",
              "computed": false
            },
            {
              "value": "'info'",
              "computed": false
            }
          ]
        },
        "required": true,
        "description": "Type of alert. One of the following: [\"info\", \"success\", \"warning\", \"error\"]"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the icon element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "buttonStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the button element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "hideAlert": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when the close button is clicked\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      }
    }
  },
  "components/app-header/component.jsx": {
    "description": "Your app's header",
    "displayName": "AppHeader",
    "methods": [],
    "props": {
      "text": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Title text (your app's name)",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "icon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Icon (your app's icon)",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "rightButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Button on the right side of the AppHeader",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the icon element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "rightButtonStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the right button",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "leftButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Button on the left side of the AppHeader",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "leftButtonStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the left button",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/avatar/component.jsx": {
    "description": "A user's profile image",
    "displayName": "Avatar",
    "methods": [],
    "props": {
      "image": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Path to user's profile image"
      },
      "defaultImage": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Path to default image. This image will be shown if the image path doesn't resolve",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "status": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'online'",
              "computed": false
            },
            {
              "value": "'away'",
              "computed": false
            },
            {
              "value": "'offline'",
              "computed": false
            },
            {
              "value": "''",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "An user's status. One of the following: [\"online\", \"away\", \"offline\"]",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "statusStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the status indicator",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/badge/component.jsx": {
    "description": "Used for displaying a (notification) counter",
    "displayName": "Badge",
    "methods": [],
    "props": {
      "value": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": "The badge's value"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inverted": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Inverts color",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "maxValue": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Maximum value that will be shown.\nThis will result in `${maxValue}+` if value exceeds maxValue.",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/banner/component.jsx": {
    "description": "728x90 and 320x50 banners",
    "displayName": "Banner",
    "methods": [
      {
        "name": "setMedia",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "matches",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "content": {
        "type": {
          "name": "shape",
          "value": {
            "desktop": {
              "name": "node",
              "description": "728x90 banner",
              "required": true
            },
            "mobile": {
              "name": "node",
              "description": "320x50 banner",
              "required": true
            }
          }
        },
        "required": true,
        "description": "Content of the Banner"
      },
      "hideBanner": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when the close button is clicked\n\nfunction(event: object) => void"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "open": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Toggle banner open",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "components/button/component.jsx": {
    "description": "General purpose button with three types",
    "displayName": "Button",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content of the button"
      },
      "onClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when the Button is clicked\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconButton": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Toggle IconButton type",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "inverted": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Inverts color",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disables the button",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "flatButton": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Toggle FlatButton type",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/card/component.jsx": {
    "description": "A Card is a piece of paper with unique related data",
    "displayName": "Card",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The Card's content"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/card-content/component.jsx": {
    "description": "A Card is a piece of paper with unique related data",
    "displayName": "CardContent",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The CardContent's content"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/card-header/component.jsx": {
    "description": "A Card is a piece of paper with unique related data",
    "displayName": "CardHeader",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "titleStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the title element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "title": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The CardHeader's title"
      },
      "subtitleStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the subtitle element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "subtitle": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The CardHeader's subtitle",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "avatar": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Path to an Avatar image",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "avatarStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the subtitle element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/channel-header/component.jsx": {
    "description": "A channel's header",
    "displayName": "ChannelHeader",
    "methods": [],
    "props": {
      "name": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The channel's name"
      },
      "secondaryText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Optional text to display below `name`",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "rightButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Button on the right side of the ChannelHeader",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "leftButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Button on the left side of the ChannelHeader",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "secondaryTextStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "leftButtonStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the leftButton element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "rightButtonStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the rightButton element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/checkbox/component.jsx": {
    "description": "A checkbox is used to verify which options you want selected from a group.",
    "displayName": "Checkbox",
    "methods": [],
    "props": {
      "label": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The input's label text"
      },
      "name": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The input's name"
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when the input's value is changed\n\nfunction(event: object) => void"
      },
      "checked": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Checkbox checked",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inputStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the input element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the icon element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "uncheckedStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the unchecked element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "value": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            },
            {
              "name": "bool"
            }
          ]
        },
        "required": true,
        "description": "The checkbox' value"
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/checkbox-group/component.jsx": {
    "description": "",
    "displayName": "CheckboxGroup",
    "methods": [],
    "props": {
      "values": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "union",
            "value": [
              {
                "name": "string"
              },
              {
                "name": "number"
              },
              {
                "name": "bool"
              }
            ]
          }
        },
        "required": false,
        "description": "The CheckboxGroup's values",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when Checkbox's value changes\n\nfunction(event: object) => void"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The CheckboxGroup's content (Checkbox), each child must have a value prop"
      },
      "label": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The CheckboxGroup's label"
      },
      "labelStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "buttonStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the button container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "error": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Display an error message",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "errorStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the error element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/commands/component.jsx": {
    "description": "Used for displaying a list of commands",
    "displayName": "Commands",
    "methods": [
      {
        "name": "filterCommands",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "commands",
            "type": null
          },
          {
            "name": "value",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "hideMenu",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "handleClickOutside",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "handleKeyDown",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "selectNext",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "selectPrevious",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleSelect",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          },
          {
            "name": "command",
            "type": null
          },
          {
            "name": "index",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleChange",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          },
          {
            "name": "command",
            "type": null
          },
          {
            "name": "index",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "header": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Text to display in the header",
        "defaultValue": {
          "value": "'Commands'",
          "computed": false
        }
      },
      "commands": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "value": {
                "name": "string",
                "description": "The command's value",
                "required": true
              },
              "prefix": {
                "name": "string",
                "description": "The command's prefix",
                "required": true
              },
              "description": {
                "name": "node",
                "description": "Optional command description",
                "required": false
              },
              "param": {
                "name": "node",
                "description": "Optional command parameter",
                "required": false
              },
              "avatar": {
                "name": "node",
                "description": "Optional command avatar",
                "required": false
              }
            }
          }
        },
        "required": true,
        "description": "The list of commands. Must be an array of objects containing the following:\n\n{\n  value: String,\n  prefix: String,\n  description: Node (optional),\n  param: Node (optional),\n  avatar: Node (optional)\n}"
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Filter commands based on input value"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "titleStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the title element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "descriptionStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the description element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "commandStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the command element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "paramStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the param element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "onSelect": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when a command is clicked\n\nfunction(event: object, command: string) => void"
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when a command is moused over\n\nfunction(event: object, command: string) => void"
      },
      "leading": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Match first word or entire input",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "onMenuOpen": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when the menu is opened\n\nfunction() => void",
        "defaultValue": {
          "value": "noop",
          "computed": true
        }
      },
      "onMenuClose": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when the menu is closed\n\nfunction() => void",
        "defaultValue": {
          "value": "noop",
          "computed": true
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/date-separator/component.jsx": {
    "description": "A separator to show above a Message",
    "displayName": "DateSeparator",
    "methods": [],
    "props": {
      "date": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The date to display"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/dialog/component.jsx": {
    "description": "General purpose dialog",
    "displayName": "Dialog",
    "methods": [
      {
        "name": "handleKeyUp",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "header": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Header text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "overlayStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the overlay element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "hideDialog": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when the close button is clicked\n\nfunction(event: object) => void"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Optional children, will only render children and headerText with other styles",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "iconColor": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The close button's icon color",
        "defaultValue": {
          "value": "colors.white",
          "computed": true
        }
      },
      "open": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Toggle the Dialogs visibility",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/divider/component.jsx": {
    "description": "Dividers group and separate content within lists and page layouts.",
    "displayName": "Divider",
    "methods": [],
    "props": {
      "text": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Optional divider text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/emoji-filter/component.jsx": {
    "description": "Used for displaying a list of commands",
    "displayName": "EmojiFilter",
    "methods": [
      {
        "name": "filterEmoji",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "value",
            "type": null
          },
          {
            "name": "tone",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "hideMenu",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "handleKeyDown",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleClickOutside",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "selectNext",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "selectPrevious",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "changeTone",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "tone",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "parseHtml",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "html",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleSelect",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          },
          {
            "name": "icon",
            "type": null
          },
          {
            "name": "index",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleChange",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          },
          {
            "name": "icon",
            "type": null
          },
          {
            "name": "index",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "value": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Filter emoji based on input value"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "onSelect": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when a emoji is selected by pressing 'enter', 'escape' or by clicking the emoji\n\nfunction(event: object, emoji: object) => void"
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when a emoji is changed by navigating with the 'arrow keys' or 'tab'\n\nfunction(event: object, emoji: object) => void"
      },
      "onMenuClose": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when the menu is closed\n\nfunction() => void",
        "defaultValue": {
          "value": "noop",
          "computed": true
        }
      },
      "onMenuOpen": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when the menu is opened\n\nfunction() => void",
        "defaultValue": {
          "value": "noop",
          "computed": true
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/emoji-menu/component.jsx": {
    "description": "Menu for sending messages with emoji",
    "displayName": "EmojiMenu",
    "methods": [
      {
        "name": "handleClickOutside",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleKeyUp",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "changeTone",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "tone",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "changeCategory",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "category",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "sendEmoji",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          },
          {
            "name": "emoji",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "sendEmoji": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when an emoji is clicked\n\nfunction(event: object, emoji: object) => void"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "modifierStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the color modifiers",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "categoryStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the emoji category",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "emojiStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the emojis",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "footerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the footer element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the footer icons",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "open": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Toggle the EmojiMenu's visibility",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "hideMenu": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Function to hide the menu"
      },
      "iconColor": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Category icon color",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/emoji-menu/emoji-categories.jsx": {
    "description": "",
    "methods": [],
    "props": {
      "changeCategory": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": ""
      },
      "category": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "activeColor": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "recent": {
        "type": {
          "name": "bool"
        },
        "required": true,
        "description": ""
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconColor": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/emoji-menu/emoji-category.jsx": {
    "description": "",
    "methods": [],
    "props": {
      "category": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "emojis": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "shortname": {
                "name": "string",
                "required": true
              }
            }
          }
        },
        "required": true,
        "description": ""
      },
      "sendEmoji": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": ""
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "emojiStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/emoji-menu/emoji-modifiers.jsx": {
    "description": "",
    "displayName": "EmojiModifiers",
    "methods": [],
    "props": {
      "modifiers": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "shortname": {
                "name": "string",
                "required": true
              },
              "title": {
                "name": "string",
                "required": true
              }
            }
          }
        },
        "required": true,
        "description": ""
      },
      "changeTone": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": ""
      },
      "tone": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "modifierStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/empty-state/component.jsx": {
    "description": "Pretty placeholder for empty content",
    "displayName": "EmptyState",
    "methods": [],
    "props": {
      "headerText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Body text"
      },
      "bodyText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Header text"
      },
      "button": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "A call to action button",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "background": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Path to background image",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headingStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the header text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "bodyStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the body text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/gallery/component.jsx": {
    "description": "Justified grid layout for showcasing images.",
    "displayName": "Gallery",
    "methods": [
      {
        "name": "showLightbox",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "item",
            "type": null
          },
          {
            "name": "index",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "hideLightbox",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "handleKeyUp",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "selectNext",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "selectPrevious",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "items": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "src": {
                "name": "string",
                "required": true
              },
              "alt": {
                "name": "string",
                "required": false
              },
              "placeholder": {
                "name": "string",
                "required": false
              },
              "placeholderType": {
                "name": "enum",
                "value": [
                  {
                    "value": "'image'",
                    "computed": false
                  },
                  {
                    "value": "'color'",
                    "computed": false
                  }
                ],
                "required": false
              },
              "width": {
                "name": "union",
                "value": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "number"
                  }
                ],
                "required": false
              },
              "height": {
                "name": "union",
                "value": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "number"
                  }
                ],
                "required": false
              },
              "title": {
                "name": "node",
                "required": false
              }
            }
          }
        },
        "required": true,
        "description": "Array of objects containing gallery images.\nEach object must have a 'src' key.\n'alt', 'placeholder', 'placeholderType', 'width', 'height' and 'title' are optional\nColor placeholders only work if both 'width' and 'height' are set"
      },
      "rowHeight": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Gallery row height",
        "defaultValue": {
          "value": "320",
          "computed": false
        }
      },
      "onItemClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when a Gallery's item is clicked, only works if enableLightbox equals false\n\nfunction(event: object, image: object) => void",
        "defaultValue": {
          "value": "noop",
          "computed": true
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "itemContainerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the image container element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "itemStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the image element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "enableLightbox": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Open a Lightbox when an item is clicked",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "imagePlaceholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Image placeholder url",
        "defaultValue": {
          "value": "'https://cdn.anchor.fish/client/assets/defaults/picture.f682bf93.jpg'",
          "computed": false
        }
      },
      "imageError": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Image error url",
        "defaultValue": {
          "value": "'https://cdn.anchor.fish/client/assets/defaults/error.2838da1f.jpg'",
          "computed": false
        }
      }
    }
  },
  "components/icon-menu/component.jsx": {
    "description": "Open a menu from an Icon, give options related to the icon",
    "displayName": "IconMenu",
    "methods": [
      {
        "name": "positionPopOver",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "openMenu",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "closeMenu",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleClickOutside",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "applyCloseMenuToChildren",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "children",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleKeyUp",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleHeaderClick",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "icon": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Icon to toggle the menu with"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content of the IconMenu (MenuItems)"
      },
      "secondaryMenuItems": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Secondary set of MenuItems",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "dividerText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Text to divide the menu items",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "header": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Optional header text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "contentStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the content container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "onMenuClose": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when the IconMenu closes\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "noop",
          "computed": true
        }
      },
      "dividerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the divider element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "onHeaderClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when the IconMenu's header is clicked\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "noop",
          "computed": true
        }
      },
      "buttonStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the Button component",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/icons/channel-avatar.jsx": {
    "description": "",
    "displayName": "ChannelAvatar",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.theme",
          "computed": true
        }
      },
      "inverted": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "components/icons/icon-activity.jsx": {
    "description": "",
    "displayName": "IconActivity",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-add-friend.jsx": {
    "description": "",
    "displayName": "IconAddFriend",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-add-image.jsx": {
    "description": "",
    "displayName": "IconAddImage",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-admin.jsx": {
    "description": "",
    "displayName": "IconAdmin",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-arrow-left.jsx": {
    "description": "",
    "displayName": "IconArrowLeft",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-arrow-right.jsx": {
    "description": "",
    "displayName": "IconArrowRight",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-block.jsx": {
    "description": "",
    "displayName": "IconBlock",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-bomb.jsx": {
    "description": "",
    "displayName": "IconBomb",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-broadcast.jsx": {
    "description": "",
    "displayName": "IconBroadcast",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-cart.jsx": {
    "description": "",
    "displayName": "IconCart",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-channel-settings.jsx": {
    "description": "",
    "displayName": "IconChannelSettings",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-channel.jsx": {
    "description": "",
    "displayName": "IconChannel",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-channels.jsx": {
    "description": "",
    "displayName": "IconChannels",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-chart.jsx": {
    "description": "",
    "displayName": "IconChart",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-checkbox.jsx": {
    "description": "",
    "displayName": "IconCheckbox",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-chevron-down.jsx": {
    "description": "",
    "displayName": "IconChevronDown",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-chevron-left.jsx": {
    "description": "",
    "displayName": "IconChevronLeft",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-chevron-right.jsx": {
    "description": "",
    "displayName": "IconChevronRight",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-clock.jsx": {
    "description": "",
    "displayName": "IconClock",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-close.jsx": {
    "description": "",
    "displayName": "IconClose",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-coins.jsx": {
    "description": "",
    "displayName": "IconCoins",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-color.jsx": {
    "description": "",
    "displayName": "IconColor",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.theme",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-conversation.jsx": {
    "description": "",
    "displayName": "IconConversation",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-delete.jsx": {
    "description": "",
    "displayName": "IconDelete",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-edit.jsx": {
    "description": "",
    "displayName": "IconEdit",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-emoji.jsx": {
    "description": "",
    "displayName": "IconEmoji",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-error.jsx": {
    "description": "",
    "displayName": "IconError",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-exit.jsx": {
    "description": "",
    "displayName": "IconExit",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-first.jsx": {
    "description": "",
    "displayName": "IconFirst",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-font.jsx": {
    "description": "",
    "displayName": "IconFont",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-food.jsx": {
    "description": "",
    "displayName": "IconFood",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-gender-female.jsx": {
    "description": "",
    "displayName": "IconGenderFemale",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-gender-male.jsx": {
    "description": "",
    "displayName": "IconGenderMale",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-hammer.jsx": {
    "description": "",
    "displayName": "IconHammer",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-hand.jsx": {
    "description": "",
    "displayName": "IconHand",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-home.jsx": {
    "description": "",
    "displayName": "IconHome",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-info.jsx": {
    "description": "",
    "displayName": "IconInfo",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-language.jsx": {
    "description": "",
    "displayName": "IconLanguage",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-last.jsx": {
    "description": "",
    "displayName": "IconLast",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-lock.jsx": {
    "description": "",
    "displayName": "IconLock",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-mail.jsx": {
    "description": "",
    "displayName": "IconMail",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-menu.jsx": {
    "description": "",
    "displayName": "IconMenu",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-microphone.jsx": {
    "description": "",
    "displayName": "IconMicrophone",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-more.jsx": {
    "description": "",
    "displayName": "IconMore",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-mute.jsx": {
    "description": "",
    "displayName": "IconMute",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-nature.jsx": {
    "description": "",
    "displayName": "IconNature",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-notification.jsx": {
    "description": "",
    "displayName": "IconNotification",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-objects.jsx": {
    "description": "",
    "displayName": "IconObjects",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-people.jsx": {
    "description": "",
    "displayName": "IconPeople",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-person.jsx": {
    "description": "",
    "displayName": "IconPerson",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-picture.jsx": {
    "description": "",
    "displayName": "IconPicture",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-plus.jsx": {
    "description": "",
    "displayName": "IconPlus",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-power.jsx": {
    "description": "",
    "displayName": "IconPower",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-question.jsx": {
    "description": "",
    "displayName": "IconQuestion",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-radio.jsx": {
    "description": "",
    "displayName": "IconRadio",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-refresh.jsx": {
    "description": "",
    "displayName": "IconRefresh",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-remove-friend.jsx": {
    "description": "",
    "displayName": "IconRemoveFriend",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-report.jsx": {
    "description": "",
    "displayName": "IconReport",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-rocket.jsx": {
    "description": "",
    "displayName": "IconRocket",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-rules.jsx": {
    "description": "",
    "displayName": "IconRules",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-search.jsx": {
    "description": "",
    "displayName": "IconSearch",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-send.jsx": {
    "description": "",
    "displayName": "IconSend",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-settings.jsx": {
    "description": "",
    "displayName": "IconSettings",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-shop.jsx": {
    "description": "",
    "displayName": "IconShop",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-success.jsx": {
    "description": "",
    "displayName": "IconSuccess",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-symbols.jsx": {
    "description": "",
    "displayName": "IconSymbols",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-thumbs-down.jsx": {
    "description": "",
    "displayName": "IconThumbsDown",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-thumbs-up.jsx": {
    "description": "",
    "displayName": "IconThumbsUp",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-tools.jsx": {
    "description": "",
    "displayName": "IconTools",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-travel.jsx": {
    "description": "",
    "displayName": "IconTravel",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-upload.jsx": {
    "description": "",
    "displayName": "IconUpload",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-warning.jsx": {
    "description": "",
    "displayName": "IconWarning",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/image-loader/index.jsx": {
    "description": "",
    "displayName": "ImageLoader",
    "methods": [
      {
        "name": "handleError",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "error",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleLoad",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "create",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "destroy",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "renderImage",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "alt": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The alt of the image to be loaded",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "error": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Optional error component to show when image failed to load",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "imgProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Optional props for the img element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "onError": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when loading throws an error\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "noop",
          "computed": true
        }
      },
      "onLoad": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when image is finished loading\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "noop",
          "computed": true
        }
      },
      "placeholder": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Placeholder to show while the image is loading",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "src": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The URL of the image to be loaded"
      }
    }
  },
  "components/input/component.jsx": {
    "description": "General purpose form input",
    "displayName": "Input",
    "methods": [
      {
        "name": "setTextareaHeight",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "handleChange",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when the Input's value is changed\n\nfunction(event: object) => void"
      },
      "value": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": true,
        "description": "The input's value"
      },
      "type": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Type of input",
        "defaultValue": {
          "value": "'text'",
          "computed": false
        }
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Type of input",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "label": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The input's label",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "name": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The input's name"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inputStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the input element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "maxLength": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The input's max length",
        "defaultValue": {
          "value": "500",
          "computed": false
        }
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disables the input",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "error": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Display an error message",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "errorStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the error element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "placeholderStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the placeholder",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "multiLine": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Multi line input. If true, a textarea element will be rendered.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "maxRows": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Multi line input's max visible rows.",
        "defaultValue": {
          "value": "12",
          "computed": false
        }
      },
      "rowHeight": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Multi line input's row height.",
        "defaultValue": {
          "value": "16",
          "computed": false
        }
      }
    }
  },
  "components/lightbox/component.jsx": {
    "description": "Lightbox for images",
    "displayName": "Lightbox",
    "methods": [
      {
        "name": "handleKeyUp",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "overlayStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the overlay element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "hideLightbox": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when the Lightbox is closed\n\nfunction(event: object) => void"
      },
      "image": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Link to the image"
      },
      "title": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The image's title",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "iconColor": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The close button's icon color",
        "defaultValue": {
          "value": "colors.white",
          "computed": true
        }
      },
      "open": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Toggle the Lightboxs visibility",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "components/list/component.jsx": {
    "description": "A wrapper for ListItems",
    "displayName": "List",
    "methods": [
      {
        "name": "renderRows",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "{\n  index,\n  isScrolling,\n  key,\n  style\n}",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "renderVirtualizedList",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "ListItems to render"
      },
      "header": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Optional header text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "enableInfiniteScroll": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Enable virtualized list from 'react-virtualized'.\nList will only render items that are in view",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "itemHeight": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Specify the height of each item in the list.\nOnly works if enableInfiniteScroll is set to true.",
        "defaultValue": {
          "value": "48",
          "computed": false
        }
      },
      "listStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the list element. Height needs to be set for inifite scroll to work.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "overscanRowCount": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Specify amount of items to render outside the view.\nOnly works if enableInfiniteScroll is set to true.\nDefaults to 10, increasing the amount can cause massive performance loss.",
        "defaultValue": {
          "value": "10",
          "computed": false
        }
      },
      "scrollPlaceholder": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "node"
            },
            {
              "name": "arrayOf",
              "value": {
                "name": "node"
              }
            }
          ]
        },
        "required": false,
        "description": "Optional scrolling placeholder\nOnly works if enableInfiniteScroll is set to true.\n\n- Single component used on every child\n\n- Array of components, equal to children, index rendered based on position (placeholder[index])",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "scrollToIndex": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Scroll to a specific index",
        "defaultValue": {
          "value": "undefined",
          "computed": true
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/list-item/component.jsx": {
    "description": "A list's item",
    "displayName": "ListItem",
    "methods": [],
    "props": {
      "primaryText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The ListItem's primary text"
      },
      "secondaryText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The ListItem's secondary text",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "textBadge": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "A badge to display before the secondaryText.",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "primaryTextStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the primaryText element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "secondaryTextStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the secondaryText element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "onClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when the ListItem is clicked\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "active": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Add active styles to ListItem",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "rightButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Right-hand side placed button",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "avatar": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The item's avatar, if a string is provided Avatar component is used",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "badge": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Add a badge to the ListItem",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "muted": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Add muted styles to ListItem",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "blocked": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Add blocked styles to ListItem",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/loader/index.jsx": {
    "description": "Animated loader",
    "displayName": "Loader",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "dotStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the dot element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inverted": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Inverts the color",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/media/index.jsx": {
    "description": "CSS media query component, listens to matches for given queries",
    "displayName": "Media",
    "methods": [
      {
        "name": "updateMatches",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "query": {
        "type": {
          "name": "objectOf",
          "value": {
            "name": "string"
          }
        },
        "required": true,
        "description": "Media query to listen for, must be an object of valid CSS Media queries"
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when the window resizes, is also fired on mount\n\nfunction(matches: object) => void"
      }
    }
  },
  "components/menu/index.jsx": {
    "description": "Menu that slides in from the left or right",
    "displayName": "Menu",
    "methods": [
      {
        "name": "handleKeyUp",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "renderNav",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The Menu's content (MenuItem)"
      },
      "open": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Menu open",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "closeMenu": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when Menu's overlay or MenuItems are clicked\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "header": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The Menu's header",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "headerIcon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The header's icon",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "footer": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The Menu's footer",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "position": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'left'",
              "computed": false
            },
            {
              "value": "'right'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "The Menu's footer",
        "defaultValue": {
          "value": "'left'",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the icon element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "footerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the footer element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "contentContainerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the footer element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/menu-item/index.jsx": {
    "description": "General purpose menu item",
    "displayName": "MenuItem",
    "methods": [
      {
        "name": "handleClick",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "renderIcon",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "icon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The item's icon",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "text": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The item's label"
      },
      "active": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "MenuItem active",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "onClick": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when MenuItem is clicked\n\nfunction(event: object) => void"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the input element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the icon element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "closeMenu": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when the MenuItem closes a Menu/IconMenu\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "rightButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Right-hand side placed button",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "buttonStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the right button element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "activeStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override style applied when the MenuItem is active",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/message/index.jsx": {
    "description": "Messages with optional styling for the current user's message,\ndifferent font sizes and message styles",
    "displayName": "Message",
    "methods": [],
    "props": {
      "avatar": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Path to the user's profile image will only be rendered if provided",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "body": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The message's body text"
      },
      "createdAt": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Time when the message was created"
      },
      "username": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The sender's username"
      },
      "type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'text'",
              "computed": false
            },
            {
              "value": "'image'",
              "computed": false
            },
            {
              "value": "'sticker'",
              "computed": false
            },
            {
              "value": "'giphy'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "The message's type",
        "defaultValue": {
          "value": "'text'",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "messageHeaderStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "messageBodyStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the body element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "messageTimeStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the time element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "fontSize": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'small'",
              "computed": false
            },
            {
              "value": "'medium'",
              "computed": false
            },
            {
              "value": "'large'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "The message size. One of the following: [\"small\", \"medium\", \"large\"]",
        "defaultValue": {
          "value": "'small'",
          "computed": false
        }
      },
      "myMessage": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Flag used to change message styles. True if the message was sent by the current user",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "emoji": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Enable emojione for messages",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "enableLinks": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Enables links in messages",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "compact": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Enables compact messages",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "enableLightbox": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Enables Lighbox for image messages",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "collapsed": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Collapse an image message",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "collapsedText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Text to display for collapsed messages",
        "defaultValue": {
          "value": "'This image has been collapsed.'",
          "computed": false
        }
      },
      "giphyDescription": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Text to display above giphy messages",
        "defaultValue": {
          "value": "'Sent using /giphy'",
          "computed": false
        }
      },
      "edited": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Text to display for edited banner",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "separator": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Show a separator above the message",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "highlights": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "custom",
            "raw": "String"
          }
        },
        "required": false,
        "description": "Highlight text, must be an array of objects containing id, value, and prefix.\n\nText matching '[prefix][value]' will be highlighted",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "onHighlightClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when highlighted text is clicked\n\nfunction(event: object, highlight: object) => void",
        "defaultValue": {
          "value": "noop",
          "computed": true
        }
      },
      "badge": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Badge to display next to username",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "iconMenu": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Render an IconMenu in Message",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "enableMultiline": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Enables multiline messages",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "imageLoaderProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "ImageLoader props, see https://ui.anchor.chat/#/image-loader",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/message-input/index.jsx": {
    "description": "Message input with send button",
    "displayName": "MessageInput",
    "methods": [
      {
        "name": "setTextareaHeight",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "handleChange",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleKeyDown",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleMessageSend",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "focusInput",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when MessageInput's value changes\n\nfunction(event: object) => void"
      },
      "sendMessage": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when a message is sent\n\nfunction(event: object) => void"
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The input's value"
      },
      "placeholder": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The input's placeholder"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inputStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the input element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "maxLength": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The input's max length",
        "defaultValue": {
          "value": "500",
          "computed": false
        }
      },
      "leftButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Left-hand side placed button",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "rightButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Right-hand side placed button",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disables the input for the messageInput area",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "multiLine": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Multi line input. If true, a textarea element will be rendered.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "maxRows": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Multi line input's max visible rows.",
        "defaultValue": {
          "value": "12",
          "computed": false
        }
      },
      "rowHeight": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Multi line input's row height.",
        "defaultValue": {
          "value": "16",
          "computed": false
        }
      },
      "sendIconColor": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Color for the send button icon",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "sendIcon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Custom send button icon",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "placeholderStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the input's placeholder",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/message-list/index.jsx": {
    "description": "Render a list of items (Messages) with optional auto scroll",
    "displayName": "MessageList",
    "methods": [
      {
        "name": "scrollToBottom",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "shouldScrollToBottom",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "{ scrollHeight, scrollTop, offsetHeight }",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "MessageList content"
      },
      "scrollOffset": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The amount of pixels the user has to scroll up to disable auto scroll",
        "defaultValue": {
          "value": "100",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "listStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the ul element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "autoScroll": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Enable autoScroll",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "components/modal/index.jsx": {
    "description": "A dialog that can only be closed by selecting one of the actions.",
    "displayName": "Modal",
    "methods": [],
    "props": {
      "header": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Header text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The Modal's children"
      },
      "actions": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The Modal's actions"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the style of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "contentStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the style of the content element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "footerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the style of the footer element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "open": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Toggle the Dialogs visibility",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "overlayStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the overlay element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/overlay/index.jsx": {
    "description": "Overlay with dark transparent background, useful for rendering Dialogs in",
    "displayName": "Overlay",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The Overlays children",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the style of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/pagination/index.jsx": {
    "description": "Navigate through large sets of data",
    "displayName": "Pagination",
    "methods": [
      {
        "name": "setPage",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          },
          {
            "name": "page",
            "type": null
          },
          {
            "name": "list",
            "type": null
          },
          {
            "name": "pageSize",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "list": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "custom",
            "raw": "Object"
          }
        },
        "required": true,
        "description": "The list to navigate through"
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when the navigation changes\n\nfunction(event: object, pager: object) => void"
      },
      "initialPage": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Initial active page",
        "defaultValue": {
          "value": "1",
          "computed": false
        }
      },
      "pageSize": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The page's size",
        "defaultValue": {
          "value": "10",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The paginated list"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "navStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the nav element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "navButtonStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the nav button elements",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconButtonStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the icon button elements",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "position": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'top'",
              "computed": false
            },
            {
              "value": "'bottom'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "The nav's position relative to the children. One of the following: [\"top\", \"bottom\"]",
        "defaultValue": {
          "value": "'top'",
          "computed": false
        }
      },
      "jumpToPage": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Jump to a certain page in the list",
        "defaultValue": {
          "value": "1",
          "computed": false
        }
      }
    }
  },
  "components/paper/index.jsx": {
    "description": "A Paper element is a basic container that can give depth to the page.",
    "displayName": "Paper",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The Paper's children"
      },
      "depth": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "1",
              "computed": false
            },
            {
              "value": "2",
              "computed": false
            },
            {
              "value": "3",
              "computed": false
            },
            {
              "value": "4",
              "computed": false
            },
            {
              "value": "5",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "The Paper's shadow depth. One of the following: [1, 2, 3, 4, 5]",
        "defaultValue": {
          "value": "1",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the style of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/pop-over/index.jsx": {
    "description": "Pop over useful for showing tooltips or menu options",
    "displayName": "PopOver",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content of the PopOver"
      },
      "header": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Optional header text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "open": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Toggle the PopOvers visibility",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "popOverRef": {
        "type": {
          "name": "shape",
          "value": {
            "current": {
              "name": "object",
              "required": false
            }
          }
        },
        "required": true,
        "description": "Ref to the PopOver"
      },
      "position": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The PopOver's position relative to the anchor",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "secondaryMenuItems": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Secondary set of MenuItems",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "dividerText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Text to divide the menu items",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "dividerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the divider element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "onHeaderClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when the PopOver's header is clicked\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      }
    }
  },
  "components/portal/index.jsx": {
    "description": "Transportation of elements",
    "displayName": "Portal",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content to be portaled"
      },
      "node": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Optional node to portal children to",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      }
    }
  },
  "components/profile/index.jsx": {
    "description": "Profile useful for showing a user's info",
    "displayName": "Profile",
    "methods": [],
    "props": {
      "header": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The user's username"
      },
      "secondaryText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Secondary text line",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "avatar": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Path to the user's profile image will only be rendered if there is one",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "coverImage": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Path to the user's coverimage will only be rendered if there is one",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "button": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Profile action button",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Profile content",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "coverStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the cover element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "coverImageStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the coverImage element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "secondaryTextStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the secondaryText element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "avatarStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the avatar element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "status": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'online'",
              "computed": false
            },
            {
              "value": "'away'",
              "computed": false
            },
            {
              "value": "'offline'",
              "computed": false
            },
            {
              "value": "''",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "An user's status. One of the following: [\"online\", \"away\", \"offline\"]",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      }
    }
  },
  "components/profile-card/index.jsx": {
    "description": "Card containing the user's profile data",
    "displayName": "ProfileCard",
    "methods": [],
    "props": {
      "avatar": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Path to the user's profile image",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "username": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The user's username"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "usernameStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the username element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/radio-button/index.jsx": {
    "description": "Radio buttons are switches used for selection from multiple options",
    "displayName": "RadioButton",
    "methods": [],
    "props": {
      "value": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The input's value"
      },
      "label": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The input's label text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when RadioButton's value changes\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "checked": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Input active",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inputStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the input element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the icon element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "icon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/radio-button-group/index.jsx": {
    "description": "",
    "displayName": "RadioButtonGroup",
    "methods": [],
    "props": {
      "value": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": true,
        "description": "The RadioButtonGroup's value"
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when RadioButtonGroup's value changes\n\nfunction(event: object) => void"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The RadioButtonGroup's content (RadioButton), each child must have a value prop"
      },
      "label": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The RadioButtonGroup's label",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "labelStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "buttonStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the button container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "error": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Display an error message",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "errorStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the error element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/search-box/index.jsx": {
    "description": "General purpose Search box",
    "displayName": "SearchBox",
    "methods": [
      {
        "name": "changeSearchQuery",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleChange",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when SearchBox's value changes\n\nfunction(event: object) => void"
      },
      "changeSearchQuery": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when SearchBox's query changes, with debounce\n\nfunction(query: string) => void"
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The input's value"
      },
      "placeholder": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The input's placeholder",
        "defaultValue": {
          "value": "'Search something...'",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inputStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the input element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the icon element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "placeholderStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the input's placeholder",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconColor": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The search's icon color",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      },
      "inputRef": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Add a ref to the input element",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      }
    }
  },
  "components/select/index.jsx": {
    "description": "",
    "displayName": "Select",
    "methods": [
      {
        "name": "positionPopOver",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "toggleSelect",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "closeSelect",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "handleClickOutside",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "handleKeyUp",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The Select's content (MenuItem), each child must have a value prop"
      },
      "value": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "The Select's value",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when Select's value changes\n\nfunction(event: object, value: string || number) => void"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "label": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The Select's label",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "labelStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "contentStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the content container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The Select's placeholder",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "error": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Display an error message",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "errorStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the error element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconColor": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The header's icon color",
        "defaultValue": {
          "value": "colors.white",
          "computed": true
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/slider/index.jsx": {
    "description": "General purpose form slider",
    "displayName": "Slider",
    "methods": [],
    "props": {
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when Slider's value changes\n\nfunction(event: object) => void"
      },
      "value": {
        "type": {
          "name": "custom",
          "raw": "customPropTypes.valueInRange"
        },
        "required": false,
        "description": "The slider's value. Must between min and max",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "label": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The slider's label"
      },
      "name": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The slider's name"
      },
      "max": {
        "type": {
          "name": "custom",
          "raw": "customPropTypes.minMax"
        },
        "required": false,
        "description": "The slider's max value. Cannot be equal to min.",
        "defaultValue": {
          "value": "1",
          "computed": false
        }
      },
      "min": {
        "type": {
          "name": "custom",
          "raw": "customPropTypes.minMax"
        },
        "required": false,
        "description": "The slider's min value. Cannot be equal to max.",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "step": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The slider's step value",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disables the slider",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "error": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Display an error message",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "errorStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the error element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/switch/index.jsx": {
    "description": "",
    "displayName": "Switch",
    "methods": [],
    "props": {
      "active": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "The Switch's active state",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "toggleSwitch": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when Switch's value changes\n\nfunction(event: object, value: string || number) => void"
      },
      "label": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The Switch's label",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "trackStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the track element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "knobStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the knob element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/tab/index.jsx": {
    "description": "",
    "displayName": "Tab",
    "methods": [],
    "props": {
      "icon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The Tab's icon",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "label": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The Tab's label"
      },
      "selected": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Tab selected",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "onClick": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when Tab is clicked\n\nfunction(event: object, value: string || number) => void"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of an inactive root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of an inactive label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the icon element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "badge": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Badge for the tab",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "badgeStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the badge element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "activeStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Overide the styles of an active root element.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "activeLabelStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Overide the styles of an active label element.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/table/index.jsx": {
    "description": "Tables are used to display data.",
    "displayName": "Table",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The Table's content"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/table-body/index.jsx": {
    "description": "TableBodys are used to display data.",
    "displayName": "TableBody",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The TableBody's content"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/table-column/index.jsx": {
    "description": "TableColumns are used to display data.",
    "displayName": "TableColumn",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The TableColumn's content"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/table-header/index.jsx": {
    "description": "TableHeaders are used to display data.",
    "displayName": "TableHeader",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The TableHeader's content"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "components/table-header-column/index.jsx": {
    "description": "TableHeaderColumns are used to display data.",
    "displayName": "TableHeaderColumn",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The TableHeaderColumn's content"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/table-row/index.jsx": {
    "description": "TableRows are used to display data.",
    "displayName": "TableRow",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The TableRow's content"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/tabs/index.jsx": {
    "description": "",
    "displayName": "Tabs",
    "methods": [
      {
        "name": "getInitialSelectedTab",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "isSelectedTab",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "index",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "toggleTab",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          },
          {
            "name": "value",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The Tabs's content (Tab)"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "tabContainerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the tab container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "contentContainerStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the tab content container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "contentStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override the styles of the tab content container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "initialSelectedIndex": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Specify initial visible tab index.\nIf `initialSelectedIndex` is set but larger than the total amount of specified tabs,\n`initialSelectedIndex` will revert back to default.",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "onTabChange": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when Tab is switched\n\nfunction(event: object, value: string || number) => void",
        "defaultValue": {
          "value": "noop",
          "computed": true
        }
      },
      "selectedIndex": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Index of the selected Tab",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      }
    }
  },
  "components/theme-provider/index.jsx": {
    "description": "",
    "displayName": "ThemeProvider",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Your theme's color",
        "defaultValue": {
          "value": "colors.theme",
          "computed": true
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Children to apply theme color to"
      }
    }
  }
}