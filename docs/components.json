{
  "components/alert/index.jsx": {
    "description": "Four types of (system) messages for alerting your user",
    "displayName": "Alert",
    "methods": [],
    "props": {
      "text": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Text to display"
      },
      "type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'success'",
              "computed": false
            },
            {
              "value": "'error'",
              "computed": false
            },
            {
              "value": "'warning'",
              "computed": false
            },
            {
              "value": "'info'",
              "computed": false
            }
          ]
        },
        "required": true,
        "description": "Type of alert. One of the following: [\"info\", \"success\", \"warning\", \"error\"]"
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the icon element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "buttonStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the button element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "hideAlert": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Function to hide the alert"
      }
    }
  },
  "components/app-header/index.jsx": {
    "description": "Your app's header",
    "displayName": "AppHeader",
    "methods": [],
    "props": {
      "text": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Title text (your app's name)",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "icon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Icon (your app's icon)",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "rightButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Right-hand side placed button",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the icon element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "buttonStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the button element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/avatar/index.jsx": {
    "description": "A user's profile image",
    "displayName": "Avatar",
    "methods": [],
    "props": {
      "image": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Path to user's profile image"
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/badge/index.jsx": {
    "description": "Used for displaying a (notification) counter",
    "displayName": "Badge",
    "methods": [],
    "props": {
      "value": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": "The badge's value"
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inverted": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Inverts color",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "maxValue": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": "Max value that will be renderd.\nThis will result in `${maxValue}+` if value exceeds maxValue"
      }
    }
  },
  "components/banner/index.jsx": {
    "description": "728x90 and 320x50 banners",
    "displayName": "Banner",
    "methods": [
      {
        "name": "handleMeasure",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "dimensions",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "content": {
        "type": {
          "name": "shape",
          "value": {
            "desktop": {
              "name": "node",
              "description": "728x90 banner",
              "required": true
            },
            "mobile": {
              "name": "node",
              "description": "320x50 banner",
              "required": true
            }
          }
        },
        "required": true,
        "description": "Content of the Banner"
      },
      "hideBanner": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": ""
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "open": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Toggle banner open",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "components/button/index.jsx": {
    "description": "General purpose button with two types",
    "displayName": "Button",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content of the button"
      },
      "onClick": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Button onClick function"
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconButton": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Switches between 'icon-button' and 'normal-button'",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "inverted": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Inverts color",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "components/channel-header/index.jsx": {
    "description": "A channel's header",
    "displayName": "ChannelHeader",
    "methods": [],
    "props": {
      "name": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The channel's name"
      },
      "rightButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Right-hand side placed button",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "leftButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Left-hand side placed button",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "leftButtonStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the leftButton element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "rightButtonStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the rightButton element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/dialog/index.jsx": {
    "description": "General purpose dialog",
    "displayName": "Dialog",
    "methods": [],
    "props": {
      "headerText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Header text"
      },
      "bodyText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Body text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "button": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Render a call to action button",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "image": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "An image to render in the dialog",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "overlayStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the overlay element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headingStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "bodyStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the body element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "hideDialog": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Function to hide dialog element"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Optional children, will only render children and headerText with other styles",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      }
    }
  },
  "components/divider/index.jsx": {
    "description": "",
    "displayName": "Divider",
    "methods": [],
    "props": {
      "text": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Optional divider text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/emoji-menu/emoji-categories.jsx": {
    "description": "",
    "methods": [],
    "props": {
      "changeCategory": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": ""
      },
      "category": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "activeColor": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "recent": {
        "type": {
          "name": "bool"
        },
        "required": true,
        "description": ""
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/emoji-menu/emoji-category.jsx": {
    "description": "",
    "methods": [],
    "props": {
      "category": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "emojis": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "shortname": {
                "name": "string",
                "required": true
              }
            }
          }
        },
        "required": true,
        "description": ""
      },
      "sendEmoji": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": ""
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "emojiStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/emoji-menu/emoji-modifiers.jsx": {
    "description": "",
    "methods": [],
    "props": {
      "modifiers": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "shortname": {
                "name": "string",
                "required": true
              },
              "title": {
                "name": "string",
                "required": true
              }
            }
          }
        },
        "required": true,
        "description": ""
      },
      "changeTone": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": ""
      },
      "tone": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "modifierStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/emoji-menu/index.jsx": {
    "description": "",
    "displayName": "EmojiMenu",
    "methods": [
      {
        "name": "changeTone",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "tone",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "changeCategory",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "category",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "sendEmoji",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "emoji",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "svgSprites": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Path to svg sprites",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "sendEmoji": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Send an emoji"
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "modifierStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the color modifiers",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "categoryStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the emoji category",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "emojiStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the emojis",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "footerStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the footer element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the footer icons",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/empty-state/index.jsx": {
    "description": "Pretty placeholder for empty content",
    "displayName": "EmptyState",
    "methods": [],
    "props": {
      "headerText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Body text"
      },
      "bodyText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Header text"
      },
      "button": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Render a call to action button",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "background": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Path to background image",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headingStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the header text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "bodyStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the body text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/icon-menu/index.jsx": {
    "description": "Menu with Icon and IconMenu",
    "displayName": "IconMenu",
    "methods": [
      {
        "name": "positionPopOver",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "openMenu",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "closeMenu",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "applyCloseMenuToChildren",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "children",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "icon": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Icon to toggle the menu with"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content of the IconMenu (MenuItems)"
      },
      "secondaryMenuItems": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Secondary set of MenuItems",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "dividerText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Text to divide the menu items",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "header": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Optional header text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/icons/channel-avatar.jsx": {
    "description": "",
    "displayName": "ChannelAvatar",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.theme",
          "computed": true
        }
      },
      "inverted": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "components/icons/icon-activity.jsx": {
    "description": "",
    "displayName": "IconActivity",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-add-image.jsx": {
    "description": "",
    "displayName": "IconAddImage",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-channel.jsx": {
    "description": "",
    "displayName": "IconChannel",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-channels.jsx": {
    "description": "",
    "displayName": "IconChannels",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-chevron-down.jsx": {
    "description": "",
    "displayName": "IconChevronDown",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-chevron-left.jsx": {
    "description": "",
    "displayName": "IconChevronLeft",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-chevron-right.jsx": {
    "description": "",
    "displayName": "IconChevronRight",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-clock.jsx": {
    "description": "",
    "displayName": "IconClock",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-close.jsx": {
    "description": "",
    "displayName": "IconClose",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-conversation.jsx": {
    "description": "",
    "displayName": "IconConversation",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-edit.jsx": {
    "description": "",
    "displayName": "IconEdit",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-emoji.jsx": {
    "description": "",
    "displayName": "IconEmoji",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-error.jsx": {
    "description": "",
    "displayName": "IconError",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-exit.jsx": {
    "description": "",
    "displayName": "IconExit",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-font.jsx": {
    "description": "",
    "displayName": "IconFont",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-food.jsx": {
    "description": "",
    "displayName": "IconFood",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-gender-female.jsx": {
    "description": "",
    "displayName": "IconGenderFemale",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-gender-male.jsx": {
    "description": "",
    "displayName": "IconGenderMale",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-hammer.jsx": {
    "description": "",
    "displayName": "IconHammer",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-hand.jsx": {
    "description": "",
    "displayName": "IconHand",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-info.jsx": {
    "description": "",
    "displayName": "IconInfo",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-language.jsx": {
    "description": "",
    "displayName": "IconLanguage",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-lock.jsx": {
    "description": "",
    "displayName": "IconLock",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-menu.jsx": {
    "description": "",
    "displayName": "IconMenu",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-microphone.jsx": {
    "description": "",
    "displayName": "IconMicrophone",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-more.jsx": {
    "description": "",
    "displayName": "IconMore",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-mute.jsx": {
    "description": "",
    "displayName": "IconMute",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-nature.jsx": {
    "description": "",
    "displayName": "IconNature",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-objects.jsx": {
    "description": "",
    "displayName": "IconObjects",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-people.jsx": {
    "description": "",
    "displayName": "IconPeople",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-person.jsx": {
    "description": "",
    "displayName": "IconPerson",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-power.jsx": {
    "description": "",
    "displayName": "IconPower",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-radio.jsx": {
    "description": "",
    "displayName": "IconRadio",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-rocket.jsx": {
    "description": "",
    "displayName": "IconRocket",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-search.jsx": {
    "description": "",
    "displayName": "IconSearch",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-send.jsx": {
    "description": "",
    "displayName": "IconSend",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-settings.jsx": {
    "description": "",
    "displayName": "IconSettings",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-success.jsx": {
    "description": "",
    "displayName": "IconSuccess",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-symbols.jsx": {
    "description": "",
    "displayName": "IconSymbols",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-travel.jsx": {
    "description": "",
    "displayName": "IconTravel",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/icons/icon-warning.jsx": {
    "description": "",
    "displayName": "IconWarning",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "colors.icons",
          "computed": true
        }
      }
    }
  },
  "components/input/index.jsx": {
    "description": "General purpose form input",
    "displayName": "Input",
    "methods": [],
    "props": {
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Change the input's value"
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The input's value"
      },
      "type": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Type of input"
      },
      "label": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The input's label"
      },
      "name": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The input's name"
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inputStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the input element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "maxLength": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The input's max length",
        "defaultValue": {
          "value": "500",
          "computed": false
        }
      },
      "inputRef": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Ref function to the element",
        "defaultValue": {
          "value": "() => {}",
          "computed": false
        }
      }
    }
  },
  "components/list/index.jsx": {
    "description": "List",
    "displayName": "List",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "ListItems to render"
      },
      "header": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Optional header text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "listRef": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Reference list element",
        "defaultValue": {
          "value": "() => {}",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/list-item/index.jsx": {
    "description": "A list's item",
    "displayName": "ListItem",
    "methods": [],
    "props": {
      "primaryText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The list item's primary text"
      },
      "secondaryText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The list item's secondary text",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "primaryTextStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the primaryText element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "secondaryTextStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the secondaryText element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "onClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Click function for the root element",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "active": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Add active styles to ListItem",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "rightButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Right-hand side placed button",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "avatar": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The item's avatar, if a string is supplied Avatar component is used",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "badge": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Badge object referenced by the list item",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "muted": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Add muted styles to ListItem",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "components/loader/index.jsx": {
    "description": "",
    "methods": []
  },
  "components/loader/loader.jsx": {
    "description": "Animated loader",
    "displayName": "Loader",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "dotStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the dot element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inverted": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Inverts the color",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "components/menu-item/index.jsx": {
    "description": "General purpose menu item",
    "displayName": "MenuItem",
    "methods": [
      {
        "name": "handleClick",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "icon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The item's icon",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "text": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The item's label"
      },
      "active": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "MenuItem active",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "onClick": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "MenuItem onClick function"
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the input element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the icon element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "closeMenu": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Closes IconMenu if MenuItem is child",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      }
    }
  },
  "components/message/index.jsx": {
    "description": "Messages with optional styling for the current user's message",
    "displayName": "Message",
    "methods": [
      {
        "name": "createMarkup",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "text",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "renderMessageBody",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "avatar": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Path to the user's profile image will only be rendered if provided",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "message": {
        "type": {
          "name": "shape",
          "value": {
            "body": {
              "name": "node",
              "description": "The message's body text",
              "required": true
            },
            "createdAt": {
              "name": "union",
              "value": [
                {
                  "name": "string"
                },
                {
                  "name": "instanceOf",
                  "value": "Date"
                }
              ],
              "description": "Time when the message was created",
              "required": true
            },
            "username": {
              "name": "string",
              "description": "The sender's username",
              "required": true
            },
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'text'",
                  "computed": false
                },
                {
                  "value": "'image'",
                  "computed": false
                }
              ],
              "description": "The message's type",
              "required": true
            }
          }
        },
        "required": true,
        "description": "Message object containing : body, createdAt, username"
      },
      "timeFormat": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The format of displaying message.createdAt",
        "defaultValue": {
          "value": "'HH:mm'",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "messageHeaderStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "messageBodyStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the body element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "messageTimeStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the time element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "fontSize": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'small'",
              "computed": false
            },
            {
              "value": "'medium'",
              "computed": false
            },
            {
              "value": "'large'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "The message size. One of the following: [\"small\", \"medium\", \"large\"]",
        "defaultValue": {
          "value": "'small'",
          "computed": false
        }
      },
      "myMessage": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Flag used to change message styles. True if the message was sent by the current user",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "emoji": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Enable emojione for messages",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "enableLinks": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Enables links in messages",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "compact": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Enables compact messages",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "components/message-input/index.jsx": {
    "description": "Message input with send button",
    "displayName": "MessageInput",
    "methods": [
      {
        "name": "handleKeyDown",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Change the input's value"
      },
      "sendMessage": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Send a message"
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The input's value"
      },
      "placeholder": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The input's placeholder"
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inputStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the input element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "maxLength": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The input's max length",
        "defaultValue": {
          "value": "500",
          "computed": false
        }
      },
      "leftButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Left-hand side placed button",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "inputRef": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Ref function to the element"
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disables the input for the messageInput area",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "components/message-list/index.jsx": {
    "description": "Render a list of items (Messages) with optional auto scroll",
    "displayName": "MessageList",
    "methods": [
      {
        "name": "shouldScrollToBottom",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "node",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "scrollDown",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "MessageList content"
      },
      "scrollOffset": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The amount of pixels the user has to scroll up to disable auto scroll",
        "defaultValue": {
          "value": "100",
          "computed": false
        }
      },
      "addRef": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Expose the components methods to the parent,\nuseful for calling scrollDown from a parent component",
        "defaultValue": {
          "value": "() => {}",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "listStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the <ul /> element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "autoScroll": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Enable autoScroll",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "components/paper/index.jsx": {
    "description": "",
    "displayName": "Paper",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": ""
      },
      "depth": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "1",
              "computed": false
            },
            {
              "value": "2",
              "computed": false
            },
            {
              "value": "3",
              "computed": false
            },
            {
              "value": "4",
              "computed": false
            },
            {
              "value": "5",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "1",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/pop-over/index.jsx": {
    "description": "",
    "methods": []
  },
  "components/pop-over/pop-over.jsx": {
    "description": "Pop over useful for showing tooltips or menu options",
    "displayName": "PopOver",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content of the PopOver"
      },
      "header": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Optional header text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "open": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Boolean to check if it should be open",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "popOverRef": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Ref to the PopOver"
      },
      "position": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "The PopOver's position relative to the anchor",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "secondaryMenuItems": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Secondary set of MenuItems",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "dividerText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Text to divide the menu items",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      }
    }
  },
  "components/profile-card/index.jsx": {
    "description": "Card containing the user's profile data",
    "displayName": "ProfileCard",
    "methods": [],
    "props": {
      "avatar": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Path to the user's profile image",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "username": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The user's username"
      },
      "text": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The user's info",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "usernameStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/profile-sidebar/index.jsx": {
    "description": "ProfileSidebar usefull for showing a users info",
    "displayName": "ProfileSidebar",
    "methods": [],
    "props": {
      "username": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The user's username"
      },
      "avatar": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Path to the user's profile image will only be rendered if there is one"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "MessageList content",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/radio-button/index.jsx": {
    "description": "",
    "displayName": "RadioButton",
    "methods": [],
    "props": {
      "value": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The input's value"
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The input's label text"
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "The input's onChange function",
        "defaultValue": {
          "value": "() => {}",
          "computed": false
        }
      },
      "checked": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Input active",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inputStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the input element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the icon element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/radio-button-group/index.jsx": {
    "description": "",
    "displayName": "RadioButtonGroup",
    "methods": [],
    "props": {
      "value": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": true,
        "description": "The RadioButtonGroup's value"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The RadioButtonGroup's content (RadioButton), each child must have a value prop"
      },
      "label": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The RadioButtonGroup's label",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "labelStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/search-box/index.jsx": {
    "description": "General purpose Search box",
    "displayName": "SearchBox",
    "methods": [
      {
        "name": "changeSearchQuery",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "value",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleChange",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Change the input's value"
      },
      "changeSearchQuery": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Change the search query with debounce"
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The input's value"
      },
      "placeholder": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The input's placeholder",
        "defaultValue": {
          "value": "'Search something...'",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inputStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the input element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the icon element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/select/index.jsx": {
    "description": "",
    "displayName": "Select",
    "methods": [
      {
        "name": "positionPopOver",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "toggleSelect",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The Select's content (MenuItem), each child must have a value prop"
      },
      "value": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": true,
        "description": "The Select's value"
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "label": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The Select's label",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "labelStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/switch/index.jsx": {
    "description": "",
    "displayName": "Switch",
    "methods": [],
    "props": {
      "active": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "The switch's active state",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "toggleSwitch": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Toggle the switch's active state"
      },
      "label": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The switch's label",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "trackStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the track element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "knobStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the knob element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelStyle": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "components/with-theme/index.jsx": {
    "description": "",
    "displayName": "WithTheme",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Your theme's color",
        "defaultValue": {
          "value": "colors.theme",
          "computed": true
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Children to apply theme color to"
      }
    }
  }
}